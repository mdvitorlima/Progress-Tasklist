{"version":3,"sources":["data/TaskReducer.js","data/DataStore.js","data/CommonReducer.js","data/AsyncMiddleware.js","data/ActionCreators.js","data/RestDataSource.js","forms/ValidationError.js","forms/ValidatedForm.js","forms/ValidationMessages.js","views/FormTask.js","views/GridTasks.js","views/CTask.js","views/Main.js","App.js","index.js"],"names":["initialState","tasks","SportsStoreDataStore","createStore","reducers","storeData","action","i","length","newStore","CommonReducer","state","type","Object","assign","concat","payload","data","x","_id","applyMiddleware","next","then","result","dataSource","GetData","dataType","params","a","SendRequest","process","StoreData","UpdateTask","id","method","url","Axios","request","ValidationError","this","props","errors","map","err","className","Component","ValidatedForm","handleSubmit","setState","newState","validationErrors","values","formElements","forEach","elem","checkValidity","name","messages","validity","valueMissing","push","typeMismatch","GetMessages","keys","entries","e","value","submitCallback","registerRef","element","renderElement","modelItem","label","toLowerCase","style","color","ref","defaultAttrs","attrs","Fragment","formModel","m","onClick","cancelCallback","cancelText","submitText","FormTask","useParams","objMod","filter","defaultValue","description","deadline","progress","required","formData","obj","updateTask","placeTask","history","GridTasks","console","log","useState","openSections","setopenSections","inputSearchValue","setinputSearchValue","definirStyleTasksData","str","dayMonthYear","split","dataPrazo","Date","dataAtual2","dataAtual","getFullYear","getMonth","getDate","background","border","marginTop","padding","getTime","onChange","event","target","includes","p","is_open","clickSection","fontSize","fontWeight","task","id_param","concluir","CTask","connect","slice","getData","response","useEffect","path","render","routeProps","to","App","store","component","Main","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6981a7aa.chunk.js","sourcesContent":["const initialState = {\r\n    tasks: []\r\n  };\r\n  \r\n  export function TaskReducer(state = initialState, action) {\r\n  \r\n    \r\n    if (action.type === \"STORE_DATA\") {\r\n     \r\n      return Object.assign({}, state, {\r\n        tasks: state.tasks.concat(action.payload.data)\r\n      });\r\n\r\n    }\r\n    \r\n    if (action.type === \"DATA_LOADED\") {\r\n  \r\n      return Object.assign({}, state, {\r\n        tasks: state.tasks.concat(...action.payload.data)\r\n      });\r\n    }\r\n    \r\n    if (action.type === \"UPDATE_DATA\") {\r\n       \r\n      for (let x = 0; x < state.tasks.length; x++) {\r\n        if (state.tasks[x]._id == action.payload.data._id) {\r\n          state.tasks[x] = action.payload.data;\r\n        }\r\n      }\r\n            \r\n      return Object.assign({}, state, {\r\n        tasks: state.tasks\r\n      });\r\n    }\r\n    \r\n    return state;\r\n  \r\n  }\r\n  ","import { createStore, applyMiddleware } from \"redux\";\r\nimport { TaskReducer } from \"./TaskReducer\";\r\nimport { asyncActions } from \"./AsyncMiddleware\";\r\nimport { CommonReducer } from \"./CommonReducer\";\r\n\r\nexport const SportsStoreDataStore\r\n    = createStore(CommonReducer(TaskReducer), applyMiddleware(asyncActions));\r\n","export const CommonReducer = (...reducers) => (storeData, action) => {\r\n    for (let i = 0; i < reducers.length; i++) {\r\n        let newStore = reducers[i](storeData, action);\r\n        if (newStore !== storeData) {\r\n            return newStore;\r\n        }\r\n    }\r\n    return storeData;\r\n}","const isPromise = (payload) =>\r\n    (typeof (payload) === \"object\" || typeof (payload) === \"function\")\r\n    && typeof (payload.then) === \"function\";\r\n\r\nexport const asyncActions = () => (next) => (action) => {\r\n    if (isPromise(action.payload)) {\r\n        action.payload.then(result => next({ ...action, payload: result }));\r\n    } else {\r\n        next(action)\r\n    }\r\n}","import { RestDataSource } from \"./RestDataSource\";\r\n\r\nconst dataSource = new RestDataSource();\r\n\r\nexport const updateTask = (task, id) => ({\r\n    type: \"UPDATE_DATA\",\r\n    payload: dataSource.UpdateTask(task, id).then(response => \r\n    ({\r\n        data: response.data\r\n    }))\r\n})\r\n\r\nexport const placeTask = (task) => ({\r\n    type: \"STORE_DATA\",\r\n    payload: dataSource.StoreData(task).then(response => \r\n    ({\r\n        data: response.data\r\n    }))\r\n})\r\n\r\nexport const getData = (dataType, params) => (\r\n    {\r\n        type: \"DATA_LOADED\",\r\n        payload: dataSource.GetData(dataType, params).then(response =>\r\n            ({\r\n                data: response.data\r\n            })\r\n        )\r\n    })\r\n\r\n","import Axios from \"axios\";\r\n\r\nexport class RestDataSource {\r\n\r\n\r\n    GetData = async (dataType, params) => \r\n        this.SendRequest(\"get\", process.env.REACT_APP_URL_BACKEND + \"tasks\");\r\n\r\n\r\n    StoreData = (data) =>\r\n        this.SendRequest(\"post\", process.env.REACT_APP_URL_BACKEND + \"tasks\", {}, data);\r\n    \r\n\r\n    UpdateTask = (data, id) =>\r\n        this.SendRequest(\"post\",\r\n        process.env.REACT_APP_URL_BACKEND + \"tasks/\" + id,\r\n            {},\r\n            data);\r\n    \r\n    SendRequest = (method, url, params, data) =>\r\n        Axios.request({ method, url, params, data });\r\n\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport class ValidationError extends Component {\r\n    render() {\r\n        if (this.props.errors) {\r\n            return this.props.errors.map(err =>\r\n                <h6 className=\"text-danger\" key={err}>\r\n                    {err}\r\n                </h6>\r\n            )\r\n        }\r\n        return null;\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { ValidationError } from \"./ValidationError\";\r\nimport { GetMessages } from \"./ValidationMessages\";\r\n\r\nexport class ValidatedForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            validationErrors: {}\r\n        }\r\n        this.formElements = {};\r\n    }\r\n    \r\n    handleSubmit = () => {\r\n        this.setState(state => {\r\n            const newState = { ...state, validationErrors: {} }\r\n            Object.values(this.formElements).forEach(elem => {\r\n                if (!elem.checkValidity()) {\r\n                    newState.validationErrors[elem.name] = GetMessages(elem);\r\n                }\r\n            })\r\n            return newState;\r\n        }, () => {\r\n            if (Object.keys(this.state.validationErrors).length === 0) {\r\n                const data = Object.assign(...Object.entries(this.formElements)\r\n                    .map(e => ({ [e[0]]: e[1].value })))\r\n                this.props.submitCallback(data);\r\n            }\r\n        });\r\n    }\r\n    \r\n    registerRef = (element) => {\r\n        if (element !== null) {\r\n            this.formElements[element.name] = element;\r\n        }\r\n    }\r\n    \r\n    renderElement = (modelItem) => {\r\n        const name = modelItem.name || modelItem.label.toLowerCase();\r\n        return <div className=\"form-group\" key={modelItem.label}>\r\n            <label style={{color:'white'}}>{modelItem.label}</label>\r\n            <ValidationError errors={this.state.validationErrors[name]} />\r\n            <input className=\"form-control\" name={name} ref={this.registerRef}\r\n                { ...this.props.defaultAttrs } { ...modelItem.attrs } />\r\n        </div>\r\n    }\r\n\r\n    render() {\r\n        return <React.Fragment>\r\n            {this.props.formModel.map(m => this.renderElement(m))}\r\n            <div className=\"text-center\">\r\n                <button className=\"btn btn-secondary m-1\"\r\n                    onClick={this.props.cancelCallback}>\r\n                    {this.props.cancelText || \"Cancel\"}\r\n                </button>\r\n                <button className=\"btn btn-primary m-1\"\r\n                    onClick={this.handleSubmit}>\r\n                    {this.props.submitText || \"Submit\"}\r\n                </button>\r\n            </div>\r\n        </React.Fragment>\r\n    }\r\n}\r\n","export const GetMessages = (elem) => {\r\n    const messages = [];\r\n    if (elem.validity.valueMissing) {\r\n        messages.push(\"Value required\");\r\n    }\r\n    if (elem.validity.typeMismatch) {\r\n        messages.push(`Invalid ${elem.type}`);\r\n    }\r\n    return messages;\r\n}","import React, { useState } from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { ValidatedForm } from \"../forms/ValidatedForm\";\r\n\r\n\r\nfunction FormTask(props) {\r\n\r\n    let defaultAttrs = { type: \"text\", required: true };\r\n    \r\n    let params = useParams();\r\n\r\n    let objMod = {}\r\n    \r\n\r\n    if(typeof(params.id) != \"undefined\"){\r\n        objMod = props.tasks.filter((x) => x._id == params.id)[0];            \r\n    }\r\n    \r\n\r\n    let formModel = [\r\n        { label: \"description\", attrs: { defaultValue: objMod? objMod.description : '' } },\r\n        { label: \"deadline\", attrs: { defaultValue: objMod? objMod.deadline : '' } },\r\n        { label: \"progress\", attrs: { defaultValue: objMod? objMod.progress : '' } }]\r\n  \r\n    \r\n    const handleSubmit = (formData) => {\r\n            const obj = {\r\n                ...formData\r\n            } \r\n            \r\n            if(params.id){\r\n               props.updateTask(obj, params.id);\r\n            }else{                \r\n               props.placeTask(obj);\r\n            }\r\n            \r\n        \r\n            props.history.push(\"/tasks/ini\");\r\n        }\r\n        \r\n        \r\n    const handleCancel = () => {\r\n            props.history.push(\"/tasks/ini\");\r\n        }\r\n    \r\n    return (\r\n        <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n            <div className=\"col bg-dark text-white\">\r\n                <div className=\"navbar-brand\">Registro de Atividades</div>\r\n            </div>\r\n        </div>\r\n        <div className=\"row\">\r\n            <div className=\"col m-2\">\r\n\r\n                <ValidatedForm formModel={formModel}\r\n                    defaultAttrs={defaultAttrs}\r\n                    submitCallback={handleSubmit}\r\n                    cancelCallback={handleCancel}\r\n                    submitText=\"Registrar\"\r\n                    cancelText=\"Retornar\" />\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n\r\n  };\r\n\r\n\r\n\r\n\r\nexport default FormTask;\r\n","import React, { useState } from 'react';\r\nimport \"./style.css\";\r\n\r\nfunction GridTasks(props){\r\n    \r\n    console.log(props);\r\n    \r\n    let cont = 0;\r\n    let contador = 2;\r\n\r\n    const [openSections, setopenSections] = useState({});\r\n    const [inputSearchValue, setinputSearchValue] = useState(\"\");\r\n   \r\n    const handleInputChange = (event) => {\r\n        setinputSearchValue(event.target.value);\r\n    }\r\n    \r\n\r\n    const clickSection = (id) => {\r\n\r\n       setopenSections(this);\r\n\r\n       let is_open = !openSections[id];\r\n\r\n       setopenSections({\r\n                ...openSections,\r\n                [id]: is_open\r\n        });\r\n\r\n    }\r\n    \r\n    const concluir = (task) => {\r\n        task.progress = \"100%\";\r\n        const id_param = task._id;\r\n        delete task._id;\r\n        props.updateTask(task, id_param);\r\n    }\r\n    \r\n    const editar = (task) => {\r\n        props.history.push(\"/tasks/update/\" + task._id);\r\n    }\r\n\r\n    const createNewTodo = (task) => {\r\n        props.history.push(\"/tasks/new/\");\r\n    }\r\n\r\n    const extend = (id) => {\r\n        var object = this.refs.conteudo1;\r\n\r\n    }\r\n\r\n    const SearchResults2 = () => {\r\n        //return this.props.tasks.filter((x) => x.progress != '100%');\r\n        return props.tasks.\r\n           filter(name => name.description.toLowerCase().includes(inputSearchValue.toLowerCase())\r\n               && name.progress != \"100%\");\r\n    }\r\n\r\n\r\n    const definirStyleTasksData = (str) => {\r\n\r\n        var dayMonthYear = str.split(\"/\");\r\n        var dataPrazo = new Date(dayMonthYear[2], dayMonthYear[1] - 1, dayMonthYear[0], 0, 0, 0);\r\n        var dataAtual2 = new Date();\r\n        var dataAtual = new Date(dataAtual2.getFullYear(), dataAtual2.getMonth(), dataAtual2.getDate(), 0, 0, 0);\r\n\r\n\r\n        if (dataAtual > dataPrazo) {\r\n\r\n            return {\r\n                background: '#E9967A',\r\n                border: '2px solid #ffffff',\r\n                marginTop: 10,\r\n                padding: '10px 20px',\r\n            };\r\n\r\n        } else if (dataAtual.getTime() == dataPrazo.getTime()) {\r\n            return {\r\n                background: '#efbc04',\r\n                border: '2px solid #ffffff',\r\n                marginTop: 10,\r\n                padding: '10px 20px',\r\n            };\r\n\r\n        } else {\r\n            return {\r\n                background: '#9ACD32',\r\n                border: '2px solid #ffffff',\r\n                marginTop: 10,\r\n                padding: '10px 20px',\r\n            };\r\n        }\r\n\r\n    }\r\n    \r\n    const definirStyleTasks = (str) => {\r\n\r\n        var res = str.substring(0, str.length - 1);\r\n\r\n        if (res >= 90) {\r\n            return {\r\n                background: '#9ACD32',\r\n                border: '2px solid #ffffff',\r\n                marginTop: 10,\r\n                padding: '10px 20px',\r\n            };\r\n        } else if (res < 90 && res > 60) {\r\n            //efbc04\r\n            return {\r\n                background: '#efbc04',\r\n                border: '2px solid #ffffff',\r\n                marginTop: 10,\r\n                padding: '10px 20px',\r\n            };\r\n        } else {\r\n            //dc0304\r\n            return {\r\n                background: '#E9967A',\r\n                border: '2px solid #ffffff',\r\n                marginTop: 10,\r\n                padding: '10px 20px',\r\n            };\r\n        }\r\n\r\n    }\r\n    \r\n    return (<div className=\"container-fluid\">\r\n    <div className=\"row\">\r\n     \r\n\r\n    <input type=\"text\" className=\"inputsearch\" onChange={handleInputChange} />\r\n\r\n\r\n    </div>\r\n    <div className=\"emptydiv\">\r\n\r\n    </div>\r\n    <div className=\"row\">\r\n        <h2 className=\"cabh4\">Atividades</h2>\r\n    </div>\r\n    <div>\r\n    {props.tasks && (SearchResults2()).map(p =>\r\n            <div className=\"card m-1 p-1\" key={p._id}\r\n                style={definirStyleTasksData(p.deadline)}>\r\n                <h6 onClick={() => clickSection(p._id)} style={{ color: \"black\", fontSize: 16, fontWeight: \"normal\" }}>\r\n                    {p.description}\r\n                    <span className=\"float-right\">\r\n                        <h5 style={{ color: \"black\" }}>{p.progress}</h5>\r\n                    </span>\r\n                </h6>\r\n                {openSections[p._id] && (\r\n                    <div className=\"card-text bg-white p-1\">\r\n                        {p.deadline}\r\n                        <button className=\"btn btn-success btn-sm float-right m-1 p-1\"\r\n                            onClick={() => editar(p)} >\r\n                            Editar\r\n            </button>\r\n                        <button className=\"btn btn-success btn-sm float-right m-1 p-1\"\r\n                            onClick={() => concluir(p)} >\r\n                            Concluir\r\n            </button>\r\n                    </div>\r\n                )}\r\n            </div>)}\r\n    </div>\r\n    <button className=\"btn btn-success btn-sm float-right\"\r\n        onClick={() => createNewTodo()} >\r\n        Nova Atividade\r\n    </button>\r\n\r\n    </div>\r\n      );\r\n\r\n}\r\n\r\nexport default GridTasks;","import React, { Component } from \"react\";\r\nimport GridTasks from \"./GridTasks\";\r\n\r\n\r\nfunction CTask(props){\r\n    \r\n    return (<div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n\r\n                <div className=\"col-12 p-2\">\r\n                    <GridTasks {...props} />\r\n                </div>\r\n                \r\n            </div>\r\n        </div>);\r\n  \r\n}\r\n\r\nexport default CTask;","import React, { useEffect  } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\"\r\n\r\nimport { getData, updateTask, placeTask } from \"../data/ActionCreators\";\r\n\r\nimport FormTask from \"./FormTask\";\r\nimport CTask from \"./CTask\";\r\n\r\n\r\n  function Main(props){\r\n\r\n    useEffect(() => {\r\n      props.getData();\r\n    }, []);   \r\n    \r\n    return (\r\n      <Switch>\r\n              <Route path={\"/tasks/ini\"}\r\n                  render={(routeProps) => <CTask {...props} {...routeProps} /> }/>\r\n              <Route path=\"/tasks/update/:id\" render={routeProps =>\r\n                  <FormTask {...props} {...routeProps} />} />\r\n              <Route path=\"/tasks/new\" render={routeProps =>\r\n                  <FormTask {...props} {...routeProps} />} />              \r\n              <Redirect to=\"/tasks/ini\" />\r\n          </Switch>\r\n  );\r\n \r\n  }\r\n  \r\n  const mapStateToProps = (state) => {\r\n      \r\n    return {\r\n      tasks: state.tasks.slice(0, 40)\r\n    };\r\n  }\r\n\r\n  export default connect(\r\n    mapStateToProps,\r\n    { getData, updateTask, placeTask }\r\n  )(Main);\r\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport { SportsStoreDataStore } from \"../src/data/DataStore\";\r\nimport Main from './views/Main';\r\n\r\n\r\nfunction App(){\r\n\r\n  return(<Provider store={SportsStoreDataStore}>\r\n    <Router>\r\n      <Switch>\r\n      <Route path=\"/tasks\" component={Main} />\r\n        <Redirect to=\"/tasks\" />\r\n      </Switch>\r\n    </Router>\r\n  </Provider>);\r\n\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}